import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as l}from"./app-CxQxBlzz.js";const h={};function p(t,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="遥感图像处理基础知识" tabindex="-1"><a class="header-anchor" href="#遥感图像处理基础知识"><span>遥感图像处理基础知识</span></a></h1><h2 id="第一章-认识图像" tabindex="-1"><a class="header-anchor" href="#第一章-认识图像"><span>第一章 认识图像</span></a></h2><h3 id="图像的概念" tabindex="-1"><a class="header-anchor" href="#图像的概念"><span>图像的概念</span></a></h3><p>图像就是所具有视觉效果的画面，作为一种客观对象的表达方式，是我们最常用的<strong>信息载体</strong>，也是我们最主要的<strong>信息源</strong>。（<strong>一切具有空间排列关系的数据皆为图像！</strong>）</p><h3 id="遥感图像中的关键信息" tabindex="-1"><a class="header-anchor" href="#遥感图像中的关键信息"><span><strong>遥感图像中的关键信息</strong></span></a></h3><p><strong>基本信息</strong>：行数、列数、波段数、数据文件类型、数据储存方式、数据类型</p><p><strong>像素信息</strong>：像素数据类型、像素位深、取值范围、统计特性、起始位置</p><p><strong>空间信息</strong>：投影信息、仿射变换、地面控制点、有理函数</p><p><strong>光谱信息</strong>：波段信息</p><p><strong>储存信息</strong>：间隔方式、波段顺序、压缩方式、是否分块、分块索引、金字塔</p><p><strong>其它信息</strong>：时间、地点、色彩空间、传感器信息</p><hr><h2 id="第二章-地图投影" tabindex="-1"><a class="header-anchor" href="#第二章-地图投影"><span>第二章 地图投影</span></a></h2><h3 id="大地水准面" tabindex="-1"><a class="header-anchor" href="#大地水准面"><span>大地水准面</span></a></h3><p>大地水准面是指与平均海水面重合并延伸到大陆内部的水准面。是正高的基准面。</p><h3 id="国家大地坐标系" tabindex="-1"><a class="header-anchor" href="#国家大地坐标系"><span>国家大地坐标系</span></a></h3><p>北京54、西安80、CGCS2000</p><h3 id="地图投影的方式" tabindex="-1"><a class="header-anchor" href="#地图投影的方式"><span>地图投影的方式</span></a></h3><p><strong>按投影的变形性质分类</strong></p><ul><li>等角投影：投影面上某点的任意两方向线夹角与椭球面上相应两线段夹角相等，角度变形为零。</li><li>等积投影：投影面与椭球面上相应区域的面积相等，即面积变形为零。</li><li>任意投影：投影图上，长度、面积和角度都有变形，它既不等角又不等积。</li><li>等距投影：在特定方向上没有长度变形的任意投影，属于任意投影。</li></ul><p><strong>按投影方式分类</strong></p><p>一、<strong>几何投影</strong></p><ol><li>按辅助投影面的类型划分 <ul><li><strong>方位投影</strong>：以平面作为投影面的投影。</li><li><strong>圆柱投影</strong>：以圆柱面作为投影面的投影。</li><li><strong>圆锥投影</strong>：以圆锥面作为投影面的投影。</li></ul></li><li>按辅助投影面和地球体的位置关系划分 <ul><li><strong>正轴投影</strong>:辅助投影平面与地轴垂直，或者圆锥、圆柱面的轴与地轴重合的投影。</li><li><strong>横轴投影</strong>:辅助投影平面与地轴平行，或者圆锥、圆柱面的轴与地轴垂直的投影。</li><li><strong>斜轴投影</strong>:辅助投影平面的中心法线或圆锥、圆柱面的轴与地轴斜交的投影。</li></ul></li><li>按辅助投影面与地球面的相切或相割关系划分 <ul><li><strong>切投影</strong>:辅助投影面与地球（椭球）面的相切。</li><li><strong>割投影</strong>:辅助投影面与地球（椭球）面的相割。</li></ul></li></ol><p>二、<strong>条件投影</strong>：是在几何投影的基础上，根据某些条件，用数学解析法确定球面与平面之间点与点的函数关系。</p><p>​ 方位投影、圆柱投影、圆柱投影、多圆锥投影、伪方位投影、伪圆柱投影、伪圆锥投影。</p><h3 id="常见地图投影的变形特点" tabindex="-1"><a class="header-anchor" href="#常见地图投影的变形特点"><span>常见地图投影的变形特点</span></a></h3><ol><li>圆锥投影的各种变形均是纬度<em>j</em> 的函数，与经度<em>λ</em>无关，同一纬线上的变形是相同的。</li><li>方位投影的各种变形均是天顶距Z的函数，与方位角α 无关。同一等高圈上的变形是相同的。</li><li>圆柱投影的各种变形均是纬度<em>j</em> 的函数，与经度λ无关。同一纬线上的变形是相同的。</li></ol><hr><h2 id="第三章-图像还原" tabindex="-1"><a class="header-anchor" href="#第三章-图像还原"><span>第三章 图像还原</span></a></h2><h3 id="辐射纠正" tabindex="-1"><a class="header-anchor" href="#辐射纠正"><span>辐射纠正</span></a></h3><h3 id="原因-辐射误差" tabindex="-1"><a class="header-anchor" href="#原因-辐射误差"><span>原因-辐射误差</span></a></h3><ol><li><p>传感器存在光学误差。</p></li><li><p>大气对电磁波传输存在影响，如吸收、反射、散射和投射。</p></li><li><p>地形起伏也会造成辐射误差。</p></li><li><p>其它原因：检测器的干扰、故障等。</p></li></ol><h3 id="校正方法" tabindex="-1"><a class="header-anchor" href="#校正方法"><span>校正方法</span></a></h3><h4 id="大气校正" tabindex="-1"><a class="header-anchor" href="#大气校正"><span>大气校正</span></a></h4><ol><li><p><strong>统计学方法</strong>：利用野外实测值和卫星观测值对比确定校正量。</p><h6 id="内部平均法、经验线性法" tabindex="-1"><a class="header-anchor" href="#内部平均法、经验线性法"><span>内部平均法、经验线性法</span></a></h6></li><li><p><strong>辐射传递方程计算法</strong>：测量大气参数，利用科学公式计算校正量。</p></li><li><p><strong>波段对比法</strong>：利用不容易被大气干扰的波段的值来校正其它波段。</p><h6 id="回归分析法、直方图法" tabindex="-1"><a class="header-anchor" href="#回归分析法、直方图法"><span>回归分析法、直方图法</span></a></h6></li></ol><h4 id="地面校正" tabindex="-1"><a class="header-anchor" href="#地面校正"><span>地面校正</span></a></h4><p>公式法</p><h3 id="几何纠正" tabindex="-1"><a class="header-anchor" href="#几何纠正"><span>几何纠正</span></a></h3><h3 id="几何变形" tabindex="-1"><a class="header-anchor" href="#几何变形"><span>几何变形</span></a></h3><ul><li>传感器成像方式</li><li>传感器外方位因素</li><li>地形起伏</li><li>地球曲率</li><li>大气折射</li><li>地球自转</li></ul><h4 id="分类-系统性和非系统性" tabindex="-1"><a class="header-anchor" href="#分类-系统性和非系统性"><span>分类：<strong>系统性</strong>和<strong>非系统性</strong></span></a></h4><ol><li>系统性几何变形是<strong>有规律和可以预测的</strong>，比如扫描畸变、地球曲率引起的图像变形、地球自转的影响等</li><li>非系统性几何变形是<strong>不规律的</strong>，它可以是遥感器平台的高度、速度和姿态等的不稳定等等，一般很难预测</li></ol><h3 id="粗纠正" tabindex="-1"><a class="header-anchor" href="#粗纠正"><span>粗纠正</span></a></h3><p>基于地物点、像点、投影中心的共线方程做粗纠正。</p><p>由于卫星信息的保密性，多用有理函数模型代替实际成像模型。</p><h3 id="精纠正" tabindex="-1"><a class="header-anchor" href="#精纠正"><span>精纠正</span></a></h3><h4 id="为什么" tabindex="-1"><a class="header-anchor" href="#为什么"><span>为什么</span></a></h4><ol><li>粗纠正处理了传感器成像方式、地球曲率、地球自转等因素造成的系统性误差，但是对卫星姿态、位置、速度不同造成的非系统性误差没有处理。</li><li>一个地物在不同的图像上，位置要一致，才可以进行后续图像处理。</li><li>如果同一地区的不同时间的影像，不能把它们归纳到同一个坐标系中去，图像中还存在变形，这样的图像是不能进行融合、镶嵌和比较的，是没有用的。</li></ol><h4 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h4><ol><li><p>确立纠正的多项式模型。</p></li><li><p>选择若干个控制点，利用有限个地面控制点的已知坐标，求解多项式的系数。</p><h6 id="一般来说gcp的数量至少要大于-n-1-n-2-2-n是多项式的阶数" tabindex="-1"><a class="header-anchor" href="#一般来说gcp的数量至少要大于-n-1-n-2-2-n是多项式的阶数"><span>一般来说GCP的数量至少要大于(n+1)(n+2)/2，n是多项式的阶数</span></a></h6></li><li><p>将各像元的坐标带入多项式进行计算，便可以求得纠正后的坐标。</p></li><li><p>位置进行变化，同时进行灰度重采样。</p><h6 id="重采样方法-最邻近点法、双线性内插法、三次卷积内插法" tabindex="-1"><a class="header-anchor" href="#重采样方法-最邻近点法、双线性内插法、三次卷积内插法"><span>重采样方法：最邻近点法、双线性内插法、三次卷积内插法</span></a></h6></li><li><p>精度评定。</p></li></ol><h3 id="重采样" tabindex="-1"><a class="header-anchor" href="#重采样"><span>重采样</span></a></h3><p><strong>最近邻点法</strong>： 用与像元点最近的像元灰度值作为该像元的值</p><p><strong>双线性内插法</strong> ：用像元点最近的四个像元值作内插</p><p><strong>三次卷积内插法</strong> -：用基于计算点周围相邻的16个点进行内插</p><hr><h2 id="第四章-图像运算及变换" tabindex="-1"><a class="header-anchor" href="#第四章-图像运算及变换"><span>第四章 图像运算及变换</span></a></h2><h3 id="图像运算" tabindex="-1"><a class="header-anchor" href="#图像运算"><span>图像运算</span></a></h3><h4 id="代数运算" tabindex="-1"><a class="header-anchor" href="#代数运算"><span>代数运算</span></a></h4><ul><li>＋：多幅图像求平均值，降低加性噪声；生成图像叠加效果</li><li>-：去除某一幅图像中不需要的加性图案，如背景阴影；求同一场景两幅图像间的变化；分离混合图像；去除叠加图案</li><li>×：掩膜</li><li>÷：扩大不同地物的差异；去除阴影</li></ul><h4 id="逻辑运算、几何运算" tabindex="-1"><a class="header-anchor" href="#逻辑运算、几何运算"><span>逻辑运算、几何运算</span></a></h4><h3 id="图像变换" tabindex="-1"><a class="header-anchor" href="#图像变换"><span>图像变换</span></a></h3><h4 id="k-l变换" tabindex="-1"><a class="header-anchor" href="#k-l变换"><span>K-L变换</span></a></h4><p>对图像进行正交投影变换，使得数据的互相相关性最低</p><h4 id="主成分分析-k-l变换的一种" tabindex="-1"><a class="header-anchor" href="#主成分分析-k-l变换的一种"><span>主成分分析（K-L变换的一种）</span></a></h4><p>正交变换，特征降维，使得变换后的各维度互不相关且能表征最多的信息。（投影后数据间的方差越大越好）</p><p>实质上是对原图像信息量的<strong>再分配</strong>。•图像大小不变•图像波段变少</p><h4 id="主成分分析作用" tabindex="-1"><a class="header-anchor" href="#主成分分析作用"><span>主成分分析作用</span></a></h4><ol><li>提取地物目标总体反射强度 / 去除噪声</li><li>增强动态变化信息</li><li>提高高光谱遥感图像分类效率</li><li>减少遥感图像储存数据量</li><li>波段降维、去相关</li></ol><h4 id="傅里叶变换" tabindex="-1"><a class="header-anchor" href="#傅里叶变换"><span>傅里叶变换</span></a></h4><ul><li><p>傅里叶变换把信号(函数)从时(空)域转换到<strong>频率域</strong></p></li><li><p>图像傅里叶变换是一种二维离散函数的傅里叶变换形式， 得到<strong>频率谱图</strong></p></li><li><p>频率谱图表达了构成原始图像的各单频信号，及其频率、 方向和振幅</p><h6 id="频率-像元到中心点的距离。方向-中点到像元点的指向。振幅-像元点的属性值。" tabindex="-1"><a class="header-anchor" href="#频率-像元到中心点的距离。方向-中点到像元点的指向。振幅-像元点的属性值。"><span>频率：像元到中心点的距离。方向：中点到像元点的指向。振幅：像元点的属性值。</span></a></h6></li><li><p>傅里叶变换给图像提供了全新的视角(频率域)，可以方便 的针对特定频率的信号进行针对性处理</p><h6 id="提取边缘-只保留高频信息。去除噪声-只保留低频信息。" tabindex="-1"><a class="header-anchor" href="#提取边缘-只保留高频信息。去除噪声-只保留低频信息。"><span>提取边缘 - 只保留高频信息。去除噪声：只保留低频信息。</span></a></h6></li></ul><h4 id="小波变换" tabindex="-1"><a class="header-anchor" href="#小波变换"><span>小波变换</span></a></h4><ul><li><p>用“小波”模拟原始信号</p></li><li><p>小波的变换结果同时包含<strong>时频信息</strong>，能将时域和频域结合起来描述观察信号 - 时频分析法</p></li><li><p>具有<strong>多分辨率分析</strong>的特点，时间窗和频率窗都可以改变</p><h6 id="作用-图像压缩、图像融合、图像去噪等" tabindex="-1"><a class="header-anchor" href="#作用-图像压缩、图像融合、图像去噪等"><span>作用：图像压缩、图像融合、图像去噪等</span></a></h6></li></ul><h4 id="缨帽变换" tabindex="-1"><a class="header-anchor" href="#缨帽变换"><span>缨帽变换</span></a></h4><p>一种经验性的多波段图像的正交线性变换，提取植被相关信息。</p><hr><h2 id="第五章-图像增强" tabindex="-1"><a class="header-anchor" href="#第五章-图像增强"><span>第五章 图像增强</span></a></h2><h3 id="实质" tabindex="-1"><a class="header-anchor" href="#实质"><span>实质</span></a></h3><p>扩大目标与背景的差异，突出目标，抑制背景，不会增加原始图像的信息量。</p><h3 id="直方图变换" tabindex="-1"><a class="header-anchor" href="#直方图变换"><span>直方图变换</span></a></h3><p><strong>图像反转</strong>：观察暗部细节</p><p><strong>线性拉伸</strong>：对比度更大，视觉效果更饱满</p><p><strong>对数变换</strong>：扩展低亮度区，压缩高亮度区</p><p><strong>三角波 变换等</strong></p><h3 id="直方图均衡化" tabindex="-1"><a class="header-anchor" href="#直方图均衡化"><span>直方图均衡化</span></a></h3><p>直方图均衡化是将原图像的直方图通过变换函数变为均匀的直方图</p><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/httpsqby-1330074694.cos.ap-nanjing.myqcloud.comimages20241001134928.png.png" alt="20241001144045"></p><p><strong>特点</strong>：自动的增加整个图像的对比度；增强效果不易控制，处理的结果总是得到全局均衡化的直方图。</p><h3 id="直方图规定化" tabindex="-1"><a class="header-anchor" href="#直方图规定化"><span>直方图规定化</span></a></h3><p>直方图规定化是指使一幅图像的直方图变成规定形状的直方图而对不想进行变换的增强方法。</p><p>直方图规定化的原理是对两个直方图都做均衡化，变成相同的 归一化的均匀直方图，以此均匀直方图为媒介，再对参考图像做均衡化的逆运算。</p><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144046.png" alt="20241001144046"></p><p><strong>特点</strong>：变换结果和规定图像色调分布趋于一致。</p><h3 id="卷积滤波" tabindex="-1"><a class="header-anchor" href="#卷积滤波"><span>卷积滤波</span></a></h3><h3 id="图像中常见的噪声" tabindex="-1"><a class="header-anchor" href="#图像中常见的噪声"><span>图像中常见的噪声</span></a></h3><ul><li><strong>加性噪声</strong>：与图像信号强度不相关。</li><li><strong>乘性噪声</strong>：与图像信号相关，随图像信号的变化而变化。</li><li><strong>量化噪声</strong>：数字图像主要的噪声源，表示数字图像与原始图像的差异。</li><li><strong>盐和胡椒噪声</strong>：黑图像上的白点，白图像上的黑点。</li></ul><h3 id="二维卷积" tabindex="-1"><a class="header-anchor" href="#二维卷积"><span>二维卷积</span></a></h3><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144242.png" alt="20241001144242"></p><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144256.png" alt="20241001144256"></p><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144306.png" alt="20241001144306"></p><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144317.png" alt="20241001144317"></p><h3 id="平滑滤波器" tabindex="-1"><a class="header-anchor" href="#平滑滤波器"><span>平滑滤波器</span></a></h3><ul><li><p><strong>均值滤波器</strong>：模糊化和减少噪声，邻域内像素平均灰度值取代原灰度值，模糊边缘，去除不相干细节</p></li><li><p><strong>中值滤波器</strong>：像素值用该邻近区域像素的 “中间值” 代替，适用于椒盐噪声</p></li></ul><h3 id="锐化滤波器" tabindex="-1"><a class="header-anchor" href="#锐化滤波器"><span>锐化滤波器</span></a></h3><p><strong>目的</strong>：突出图像中细节或增强被模糊的细节。</p><h3 id="一阶微分和二阶微分区别" tabindex="-1"><a class="header-anchor" href="#一阶微分和二阶微分区别"><span>一阶微分和二阶微分区别</span></a></h3><ul><li>一阶微分产生的边缘宽（如：沿斜坡很长一段非0）</li><li>一阶微分对灰度阶跃反应强烈</li><li>二阶微分对细节反应强烈如细线、孤立点</li><li>对图像增强来说，二阶微分比一阶微分好一些，因为形成增强细节的能力好一些</li></ul><p><strong>特点</strong>：常数或变化平缓的区域，结果为0或很小，亮度降低了。边缘被增强。整体对比度降低。可能出现负值。</p><hr><h2 id="第六章-图像融合" tabindex="-1"><a class="header-anchor" href="#第六章-图像融合"><span>第六章 图像融合</span></a></h2><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h3><p>图像融合是用特定的算法将两幅或多幅图像综合成一幅新的图像。利用两幅图像在<strong>时空上的相关性</strong>及<strong>信息上的互补性</strong>融合，的结果能够同时呈现多幅图像的特征，方便后续图像处理。</p><h3 id="图像配准" tabindex="-1"><a class="header-anchor" href="#图像配准"><span>图像配准</span></a></h3><p>图像配准是是像素级<strong>图像融合的先决条件</strong>。</p><p>确定空间变换模型——求解变换模型参数。</p><h3 id="ihs变换法" tabindex="-1"><a class="header-anchor" href="#ihs变换法"><span>IHS变换法</span></a></h3><p>I分量与空间纹理细节相关，H分量和S分量与人类感受色彩的方式一致。</p><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144331.png" alt="20241001144331"></p><h3 id="主成分变换-pca-融合" tabindex="-1"><a class="header-anchor" href="#主成分变换-pca-融合"><span>主成分变换（PCA）融合</span></a></h3><p>主要针对超过三个波段的影像融合。</p><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144341.png" alt="20241001144341"></p><p><strong>步骤</strong>：1.将N个波段的地分辨图像进行主成分变换。2.将单波段的高分辨率图像经过灰度拉伸，与主成分变换后的第一分量图像匹配。3.用单波段的高分辨率图像像代替第一分量图像。4.经过主成分逆变换还原到原始空间。</p><p><strong>优势</strong>：细部特征更加清晰，光谱信息更加丰富。可以对3个波段以上的多光谱图像进行融合。</p><p><strong>局限性</strong>：高分辨率图像与第一分量图像含义不同，融合得到的图像在空间分辨率和光谱分辨率上会有所变换。光谱信息的变化仍然存在。</p><h3 id="小波变换融合" tabindex="-1"><a class="header-anchor" href="#小波变换融合"><span>小波变换融合</span></a></h3><ol><li>首先对两图像进行配准 。</li><li>对低分辨率的多光谱数据进行重采样和高分辨率的空间分辨率一致 。</li><li>对配准后的多光谱和全色图像分别进行小波正变换，获得各自的低频图像和高频细节/纹理图像。</li><li><strong>用SPOT5多光谱的低频图像替代全色的低频图像 。</strong></li><li>用替换后的多光谱低频图像与全色的高频细节进行小波逆变换得到融合结果图像。</li></ol><hr><h2 id="第七章-纹理分析" tabindex="-1"><a class="header-anchor" href="#第七章-纹理分析"><span>第七章 纹理分析</span></a></h2><h3 id="纹理分析方法" tabindex="-1"><a class="header-anchor" href="#纹理分析方法"><span>纹理分析方法</span></a></h3><p>统计分析法、模型分析法、结构分析法、空间/频率域联合分析</p><h3 id="灰度共生矩阵" tabindex="-1"><a class="header-anchor" href="#灰度共生矩阵"><span>灰度共生矩阵</span></a></h3><p>通过研究灰度的空间相关特性来描述纹理的常用方法。</p><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144437.png" alt="20241001144437"></p><h3 id="灰度游程长度法" tabindex="-1"><a class="header-anchor" href="#灰度游程长度法"><span>灰度游程长度法</span></a></h3><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144447.png" alt="20241001144447"></p><h3 id="模型分析法" tabindex="-1"><a class="header-anchor" href="#模型分析法"><span>模型分析法</span></a></h3><ul><li><p>自相关模型法</p><h6 id="当纹理较粗时-ρ-d-随d的增加下降速度较慢-当纹理较细时-ρ-d-随d的增加下降速度较快。" tabindex="-1"><a class="header-anchor" href="#当纹理较粗时-ρ-d-随d的增加下降速度较慢-当纹理较细时-ρ-d-随d的增加下降速度较快。"><span>当纹理较粗时，ρ（d）随d的增加下降速度较慢；当纹理较细时，ρ（d）随d的增加下降速度较快。</span></a></h6></li><li><p>边界频率分析法</p></li><li><p>基于分形维数的分析法</p></li></ul><h3 id="结构分析法" tabindex="-1"><a class="header-anchor" href="#结构分析法"><span>结构分析法</span></a></h3><p>在<strong>已知纹理基元</strong>的情况下，根据图像纹理小区域内的特征及其周期性排列的空间几何特征和排列规则进行纹理分析。</p><h3 id="空间-频率域联合分析法" tabindex="-1"><a class="header-anchor" href="#空间-频率域联合分析法"><span>空间/频率域联合分析法</span></a></h3><p>依据傅立叶频谱峰值所占的能量比例将图像分类。</p><h3 id="各类方法比较" tabindex="-1"><a class="header-anchor" href="#各类方法比较"><span>各类方法比较</span></a></h3><p>基于<strong>统计</strong>的方法：原理简单，实现方便，能反映图像的很多特征，但是计算量较大，也较易受到噪声的影响。</p><p>基于<strong>模型</strong>的方法：效果较好，易于实现纹理分类与合成的一体化，但计算量大，自然纹理也很难用单一模型表达。</p><p>基于<strong>结构</strong>的方法：研究重点是纹理元的相互关系和排列规则，仅适用于规则纹理，对于自然纹理较难取得满意的效果；特征的选取对图像本身要求较高，在实际中不容易见到。</p><p>基于<strong>空间/频率域联合分析</strong>法：利用在空间域和频率域同时取得较好局部化特性 的滤波器对纹理图像进行滤波，从而获得较为理想的纹理特征，计算量较大。</p><h3 id="纹理应用" tabindex="-1"><a class="header-anchor" href="#纹理应用"><span>纹理应用</span></a></h3><p>如何选择一种合适的纹理特征提取方法，使得相似的纹理具有相似的特征矢量(矢量间距离小)，而不同类纹理具有较大的特征矢量(矢量间距离大)，是正确识别和区分目标的关键。</p><h3 id="为什么要灰度级压缩" tabindex="-1"><a class="header-anchor" href="#为什么要灰度级压缩"><span>为什么要灰度级压缩</span></a></h3><p>主要原因：增强统计性。附加收益：降低了计算量。</p><h3 id="特征值的选取" tabindex="-1"><a class="header-anchor" href="#特征值的选取"><span>特征值的选取</span></a></h3><ul><li>可区分性:对于属于不同类别的对象来说，它们的特征值应具有明显的差异。</li><li>可靠性:相同对象的特征值应比较相近。</li><li>独立性:所用的各特征之间应彼此不相关。虽然相关性很高的特征可以组合 起来(例如取均值)以较少噪声干扰，它一般不应该作为单独的特征使用。</li><li>数量少:模式识别系统的复杂度随系统的维数(特征的个数)迅速增长。</li></ul><hr><h2 id="第八章-非监督分类" tabindex="-1"><a class="header-anchor" href="#第八章-非监督分类"><span>第八章 非监督分类</span></a></h2><h3 id="概念-1" tabindex="-1"><a class="header-anchor" href="#概念-1"><span>概念</span></a></h3><p>是计算机根据图像数据中所体现的不同特征，把不同类别的目标自动区别开来的图像分类处理方法。</p><p>不需要先验知识、全自动处理、端到端算法</p><h3 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h3><p>根据像元之间特征的相似程度，将相似度高的像元归为一种类别</p><h3 id="目标" tabindex="-1"><a class="header-anchor" href="#目标"><span>目标</span></a></h3><p>费希尔最优准则(Fisher)：类内方差最小 &amp; 类间方差最大</p><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h3><p>简单集群分类方法、K-均值法、迭代自组织数据分析技术方法</p><h3 id="简单集群分类方法" tabindex="-1"><a class="header-anchor" href="#简单集群分类方法"><span>简单集群分类方法</span></a></h3><p>根据<strong>直方图</strong>的分布特征找出各<strong>峰值区</strong>，以<strong>谷底为界</strong>进行划分，得到的落于一个单峰区域内的样本就被划分为同一类，称为<strong>单峰子类</strong>。（若样本数据多维，可先进行K-L变换）</p><h3 id="k-均值聚类" tabindex="-1"><a class="header-anchor" href="#k-均值聚类"><span>K-均值聚类</span></a></h3><h4 id="原理-1" tabindex="-1"><a class="header-anchor" href="#原理-1"><span>原理</span></a></h4><p>样本越相似，在特征空间中的距离就越短</p><h4 id="流程" tabindex="-1"><a class="header-anchor" href="#流程"><span>流程</span></a></h4><ol><li>确定类别数</li><li>计算类中心（首次执行时类中心随机确定）</li><li>计算所有像元到所有类中心的距离</li><li>按最近距离原则对每一个像元进行归类</li><li>据Condition选择重复上述步骤2-4, 或退出</li><li>类中心不再变化时（或所有像元归属不再发生变化），得到最终分类结果</li></ol><h3 id="isodata算法" tabindex="-1"><a class="header-anchor" href="#isodata算法"><span>ISODATA算法</span></a></h3><p>在K-均值聚类中增加了分裂、合并操作。</p><p>类内方差大了（类内部不聚集），就分裂；类间方差小了（类别间很相近），就合并</p><h3 id="非监督分类方法优缺点" tabindex="-1"><a class="header-anchor" href="#非监督分类方法优缺点"><span>非监督分类方法优缺点</span></a></h3><p><strong>优点</strong></p><ol><li>不需要预先对待分类区域有广泛的了解</li><li>需要较少的人工参与，人为误差的机会减少</li><li>小的类别能够被区分出来</li></ol><p><strong>缺点</strong></p><ol><li>盲目的聚类</li><li>难以对产生的类别进行控制，得到的类别不一定是想要的类别</li><li>计算速度慢</li></ol><hr><h2 id="第九章-监督分类" tabindex="-1"><a class="header-anchor" href="#第九章-监督分类"><span>第九章 监督分类</span></a></h2><p>是以建立<strong>统计识别函数</strong>为理论基础，依据典型样本训练方法进行分类的技术。</p><h3 id="主要步骤" tabindex="-1"><a class="header-anchor" href="#主要步骤"><span>主要步骤</span></a></h3><ol><li>选择训练样本区 <ul><li>确定类别数</li><li>对每类样本选择足够多的有代表性的样本</li><li>分类前分析样本区质量</li></ul></li><li>选择合适的分类算法</li><li>分类结果的精度评估</li></ol><h3 id="选择训练样本区" tabindex="-1"><a class="header-anchor" href="#选择训练样本区"><span>选择训练样本区</span></a></h3><ul><li><strong>准确性</strong>——确保选择的样区与实际地物的一致性</li><li><strong>代表性</strong>——考虑到地物本身的复杂性，所以必须在一定程度 上反映同类地物光谱特性的波动情况</li><li><strong>统计性</strong>——选择的训练样区内必须有足够多的像元</li></ul><h3 id="选择合适的分类算法" tabindex="-1"><a class="header-anchor" href="#选择合适的分类算法"><span>选择合适的分类算法</span></a></h3><p>距离判别函数和距离判别规则</p><ul><li>最小距离分类法</li><li>平行六面体分类法</li><li>最近邻分类算法</li></ul><p>概率判别函数和贝叶斯判别规则</p><ul><li>最大似然分类法</li></ul><h3 id="分类结果的精度评估" tabindex="-1"><a class="header-anchor" href="#分类结果的精度评估"><span>分类结果的精度评估</span></a></h3><h4 id="混淆矩阵" tabindex="-1"><a class="header-anchor" href="#混淆矩阵"><span>混淆矩阵</span></a></h4><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144510.png" alt="20241001144510"></p><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144520.png" alt="20241001144520"></p><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144529.png" alt="20241001144529"></p><p>精准率=生产者精度，召回率=用户者精度</p><h3 id="监督分类特点" tabindex="-1"><a class="header-anchor" href="#监督分类特点"><span>监督分类特点</span></a></h3><ul><li>避免出现不必要的分类</li><li>可以控制训练样本的选择</li><li>分类结果</li><li>训练结果主观性较高</li><li>训练花费较多人力物力</li></ul><h3 id="制约图像分类精度的因素" tabindex="-1"><a class="header-anchor" href="#制约图像分类精度的因素"><span>制约图像分类精度的因素</span></a></h3><ul><li><p>遥感图像的制约</p><h6 id="地物本身的复杂性-同物异谱、同谱异物-传感器性能有限" tabindex="-1"><a class="header-anchor" href="#地物本身的复杂性-同物异谱、同谱异物-传感器性能有限"><span>地物本身的复杂性（同物异谱、同谱异物），传感器性能有限</span></a></h6></li><li><p>分类方法的制约</p><h6 id="单点分类-地物空间结构的信息没有利用" tabindex="-1"><a class="header-anchor" href="#单点分类-地物空间结构的信息没有利用"><span>单点分类，地物空间结构的信息没有利用</span></a></h6></li></ul><h3 id="非监督分类与监督分类的区别" tabindex="-1"><a class="header-anchor" href="#非监督分类与监督分类的区别"><span>非监督分类与监督分类的区别</span></a></h3><ol><li>非监督分类不需要先验知识，监督分类需要</li><li>监督分类需要带标签的训练样本，非监督分类不需要</li><li>适用场景不同，监督分类多用于分类、预测场景，非监督分类多用于探索数据的内在结构</li><li>算法不用，监督分类有LDA、神经网络等，非监督分类有K-Means等。</li></ol><hr><h2 id="第十章-图像分割" tabindex="-1"><a class="header-anchor" href="#第十章-图像分割"><span>第十章 图像分割</span></a></h2><h3 id="基本策略" tabindex="-1"><a class="header-anchor" href="#基本策略"><span>基本策略</span></a></h3><ul><li>根据图像像素灰度值的<strong>不连续性</strong><ul><li>先找到点、线（宽度为1）、边（不定宽度） ——<strong>找边界</strong></li><li>再确定区域</li></ul></li><li>根据图像像素灰度值的<strong>相似性</strong><ul><li>通过选择阈值，找到灰度值相似的区域——<strong>找区域</strong></li><li>区域的外轮廓就是对象的边</li></ul></li></ul><h3 id="边界分割法" tabindex="-1"><a class="header-anchor" href="#边界分割法"><span>边界分割法</span></a></h3><ol><li><p>点、线的检测</p><h6 id="用典型模板计算卷积值" tabindex="-1"><a class="header-anchor" href="#用典型模板计算卷积值"><span>用典型模板计算卷积值</span></a></h6></li><li><p><strong>边缘连接</strong>法</p><h6 id="原因-边界容易中断-用边缘连接法归整像素" tabindex="-1"><a class="header-anchor" href="#原因-边界容易中断-用边缘连接法归整像素"><span>原因：边界容易中断，用边缘连接法归整像素</span></a></h6><h6 id="做法-对于某点-当其与领域中的某点距离足够近、特征相似、方向相近-则连接" tabindex="-1"><a class="header-anchor" href="#做法-对于某点-当其与领域中的某点距离足够近、特征相似、方向相近-则连接"><span>做法：对于某点，当其与领域中的某点距离足够近、特征相似、方向相近，则连接</span></a></h6></li></ol><h3 id="阈值分割法" tabindex="-1"><a class="header-anchor" href="#阈值分割法"><span>阈值分割法</span></a></h3><p>适用于物体与背景有较强对比的情况，这种方法总可以得到封闭且连通区域的边界。</p><h4 id="分类" tabindex="-1"><a class="header-anchor" href="#分类"><span>分类</span></a></h4><ul><li>通过直方图得到阈值（直方图上的某个特定点作为分界线，如谷底）</li><li>基本全局阈值法</li><li>P参数法</li><li>最优准则法（组内方差越小，组间方差越大）</li><li>像素集合的区域增长</li><li>区域分裂与合并</li></ul><h3 id="分水岭算法" tabindex="-1"><a class="header-anchor" href="#分水岭算法"><span>分水岭算法</span></a></h3><ul><li><p>图像像素的灰度值 -&gt; 该点的海拔高度</p></li><li><p>主要目标是找出分水线</p></li><li><p>基本思想：在每个区域最小值的位置上打一个洞并且让水以均匀的上升速率从洞中涌出，从低到高淹没整个地形</p></li><li><p>当处在不同的汇聚盆地中的水将要聚合在一起时，修建大坝阻止聚合，大坝即为图像的边界</p></li></ul><hr><h2 id="第十一章-分类后处理" tabindex="-1"><a class="header-anchor" href="#第十一章-分类后处理"><span>第十一章 分类后处理</span></a></h2><ul><li><p><strong>分类编码、赋色</strong></p><h6 id="遥感影像经分类后形成的专题图-用编号、字符、图符或颜色表示各种类别" tabindex="-1"><a class="header-anchor" href="#遥感影像经分类后形成的专题图-用编号、字符、图符或颜色表示各种类别"><span>遥感影像经分类后形成的专题图，用编号、字符、图符或颜色表示各种类别</span></a></h6></li><li><p><strong>众数分析</strong></p><h6 id="用于去除单个类中的虚假像元-利用模板运算实现-模板中心像元被赋值为模板窗口中占多数的像元的值" tabindex="-1"><a class="header-anchor" href="#用于去除单个类中的虚假像元-利用模板运算实现-模板中心像元被赋值为模板窗口中占多数的像元的值"><span>用于去除单个类中的虚假像元；利用模板运算实现，模板中心像元被赋值为模板窗口中占多数的像元的值</span></a></h6></li><li><p><strong>少数分析</strong></p><h6 id="模板中心像元将被赋值为模板窗口中占少数的像元的值" tabindex="-1"><a class="header-anchor" href="#模板中心像元将被赋值为模板窗口中占少数的像元的值"><span>模板中心像元将被赋值为模板窗口中占少数的像元的值</span></a></h6></li><li><p><strong>类聚块</strong></p><ul><li><h6 id="使空间上邻近的同一类的区域连成块" tabindex="-1"><a class="header-anchor" href="#使空间上邻近的同一类的区域连成块"><span>使空间上邻近的同一类的区域连成块</span></a></h6></li><li><h6 id="用于消除类别图中空间上的不一致-小斑块、空洞等" tabindex="-1"><a class="header-anchor" href="#用于消除类别图中空间上的不一致-小斑块、空洞等"><span>用于消除类别图中空间上的不一致(小斑块、空洞等)</span></a></h6></li><li><h6 id="通常采用形态学方法进行" tabindex="-1"><a class="header-anchor" href="#通常采用形态学方法进行"><span>通常采用形态学方法进行</span></a></h6></li></ul></li><li><p><strong>类过滤</strong></p><ul><li><h6 id="用于消除类别图中孤立像元" tabindex="-1"><a class="header-anchor" href="#用于消除类别图中孤立像元"><span>用于消除类别图中孤立像元</span></a></h6></li><li><h6 id="通过查找像元8邻域或4邻域中是否存在同一类别的像元来进行-如有则保留-没有则去除。" tabindex="-1"><a class="header-anchor" href="#通过查找像元8邻域或4邻域中是否存在同一类别的像元来进行-如有则保留-没有则去除。"><span>通过查找像元8邻域或4邻域中是否存在同一类别的像元来进行，如有则保留，没有则去除。</span></a></h6></li></ul></li><li><p><strong>类合并</strong></p></li><li><p><strong>类统计</strong></p></li><li><p><strong>栅格噪声去除</strong></p></li><li><p><strong>栅格图斑矢量化</strong></p></li></ul><hr><h2 id="第十二章-深度学习遥感图像分类" tabindex="-1"><a class="header-anchor" href="#第十二章-深度学习遥感图像分类"><span>第十二章 深度学习遥感图像分类</span></a></h2><h3 id="基本原理" tabindex="-1"><a class="header-anchor" href="#基本原理"><span>基本原理</span></a></h3><p>卷积计算特征 → 迭代计算参数 → 预测趋近真值</p><h3 id="人工神经网络优化方法" tabindex="-1"><a class="header-anchor" href="#人工神经网络优化方法"><span>人工神经网络优化方法</span></a></h3><p>随机梯度下降法、动量法、自适应梯度法、自适应动量法</p><h3 id="优势" tabindex="-1"><a class="header-anchor" href="#优势"><span>优势</span></a></h3><ol><li>卷积运算：有利于刻画目标图像特征</li><li>深层次神经网络结构：有利于刻画复杂非线性映射关系</li><li>大数据：有利于学习目标的有效特征</li></ol><h3 id="cnn和ann的区别" tabindex="-1"><a class="header-anchor" href="#cnn和ann的区别"><span>CNN和ANN的区别</span></a></h3><ol><li><p><strong>结构差异</strong>：</p><p><strong>ANN</strong>：人工神经网络通常指的是全连接网络，其中每个神经元与前一层的所有神经元相连接。</p><p><strong>CNN</strong>：卷积神经网络引入了卷积层和池化层。</p></li><li><p><strong>参数数量</strong>：</p><p><strong>CNN</strong>较<strong>ANN</strong>参数数量更少。</p></li><li><p><strong>应用场景</strong>：</p><p><strong>ANN</strong>：由于其结构的通用性，ANN可以应用于各种类型的数据和任务，如分类、回归等。</p><p><strong>CNN</strong>：特别适用于处理图像数据。在图像识别、图像分类、物体检测等领域，CNN展现了卓越的性能。</p></li><li><p><strong>训练数据</strong>：</p><p>CNN需要的训练数据较ANN更多。</p></li><li><p>CNN各层间的权重共享，ANN不共享。</p></li></ol><hr><h2 id="第十三章-形态学处理" tabindex="-1"><a class="header-anchor" href="#第十三章-形态学处理"><span>第十三章 形态学处理</span></a></h2><h3 id="基本思想" tabindex="-1"><a class="header-anchor" href="#基本思想"><span>基本思想</span></a></h3><p>用具有一定形态的<strong>结构元素</strong>探测目标图像，通过检验结构元素在图像目标中的可放性和填充方法的有效性，来获取有关图像形态结构的相关信息，进而达到对图像分析和识别的目的。</p><h3 id="腐蚀" tabindex="-1"><a class="header-anchor" href="#腐蚀"><span>腐蚀</span></a></h3><p>把结构元素B看作为一个卷积模板，每当结构元素平移到其原点位置与目标图像A中那些像素值为“1”的位置重合时， 就判断被结构元素覆盖的子图像的其它像素的值是否都与结构元素相应位置的像素值相同；只有当其都相同时，就将结果图像中的那个与原点位置对应的像素位置的值置为“1”，否则置为0。</p><p>结构元素中的任何元素不能超出目标图像的范围。</p><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144601.png" alt="20241001144601"><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144637.png" alt="20241001144637"></p><h3 id="膨胀" tabindex="-1"><a class="header-anchor" href="#膨胀"><span>膨胀</span></a></h3><p><strong>求结构元素S关于其原点的反射集合。</strong></p><p>每当结构元素Ś在目标图像A上平移后，结构元素Ś与其覆盖的子图像中至少有一个元素相交时，就将目标图像中与结构元素Ś的原点对应的那个位置的像素值置为 “1”，否则置为0。</p><p>允许结构元素中的非原点像素超出目标图像范围。</p><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144649.png" alt="20241001144649"><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144728.png" alt="20241001144728"></p><h3 id="对偶性" tabindex="-1"><a class="header-anchor" href="#对偶性"><span>对偶性</span></a></h3><p>对目标图像的膨胀运算，相当于对图像背景的腐蚀运算。</p><p>对目标图像的腐蚀运算，相当于对图像背景的膨胀运算。</p><h3 id="开运算" tabindex="-1"><a class="header-anchor" href="#开运算"><span>开运算</span></a></h3><p>先进行腐蚀运算,然后再进行膨胀运算。</p><h4 id="作用" tabindex="-1"><a class="header-anchor" href="#作用"><span>作用</span></a></h4><ul><li>平滑物体的轮廓</li><li>使狭窄的链接断开</li><li>消除细的突出物或毛刺</li></ul><h3 id="闭运算" tabindex="-1"><a class="header-anchor" href="#闭运算"><span>闭运算</span></a></h3><p>先进行膨胀运算,然后再进行腐蚀运算</p><h4 id="作用-1" tabindex="-1"><a class="header-anchor" href="#作用-1"><span>作用</span></a></h4><ul><li>平滑物体的轮廓</li><li>弥合狭窄的间断，消除小的孔洞，填补轮廓线中的断裂</li></ul><p>开运算具有磨光图像外边界的作用，而闭运算具有磨光物体内边界的作用。</p><h3 id="目标击中选择" tabindex="-1"><a class="header-anchor" href="#目标击中选择"><span>目标击中选择</span></a></h3><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144801.png" alt="20241001144801"></p><h3 id="边界提取" tabindex="-1"><a class="header-anchor" href="#边界提取"><span>边界提取</span></a></h3><p>用原图像减去腐蚀后的图像， 删除了内部点，留下了边界像素。</p><h3 id="区域填充、连通分量提取、骨架提取" tabindex="-1"><a class="header-anchor" href="#区域填充、连通分量提取、骨架提取"><span>区域填充、连通分量提取、骨架提取</span></a></h3><hr><h2 id="第十四章-数字地形分析" tabindex="-1"><a class="header-anchor" href="#第十四章-数字地形分析"><span>第十四章 数字地形分析</span></a></h2><h3 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h3><h4 id="数字高程模型" tabindex="-1"><a class="header-anchor" href="#数字高程模型"><span>数字高程模型</span></a></h4><ul><li>规则格网DEM</li><li>TIN</li><li>基于点的DEM</li><li>和基于等高线的DEM</li></ul><h3 id="地形参数计算" tabindex="-1"><a class="header-anchor" href="#地形参数计算"><span>地形参数计算</span></a></h3><p>坡度、坡向、曲率、地形起伏度、地表粗糙度、地表切割深度</p><h3 id="地形特征分析" tabindex="-1"><a class="header-anchor" href="#地形特征分析"><span>地形特征分析</span></a></h3><h4 id="地形特征点" tabindex="-1"><a class="header-anchor" href="#地形特征点"><span>地形特征点</span></a></h4><p>山顶点（peak）、凹陷点（pit）、脊点（ridge）、谷点（channel）、鞍点（pass），平地点（plane）等</p><h4 id="山脊线和山谷线提取" tabindex="-1"><a class="header-anchor" href="#山脊线和山谷线提取"><span>山脊线和山谷线提取</span></a></h4><ol><li>基于图像处理技术的原理</li><li>基于地形表面几何形态分析原理</li><li>基于地形表面流水物理模拟分析原理的算法</li><li>基于地形表面几何形态分析和流水物理模拟分析相结合</li><li>平面曲率与坡位组合法</li></ol><h4 id="流域分析" tabindex="-1"><a class="header-anchor" href="#流域分析"><span>流域分析</span></a></h4><p><strong>格网DEM实现流域地形分析的步骤：</strong></p><ol><li>DEM洼地填充</li><li>水流方向确定</li><li>水流累积矩阵生成</li><li>流域网络提取</li></ol><h4 id="可视性分析、渲染图的制作、填-挖、地形变化" tabindex="-1"><a class="header-anchor" href="#可视性分析、渲染图的制作、填-挖、地形变化"><span>可视性分析、渲染图的制作、填/挖、地形变化</span></a></h4><h2 id="编程相关" tabindex="-1"><a class="header-anchor" href="#编程相关"><span>编程相关</span></a></h2><h3 id="通用" tabindex="-1"><a class="header-anchor" href="#通用"><span>通用</span></a></h3><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">GDALDriver</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> poDriver;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">GDALDataset</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> poSrcMss </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (GDALDataset</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GDALOpen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(mssPath, GA_ReadOnly);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">GDALRasterBand</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pBandR </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> poSrcMss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetRasterBand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">GDALRasterBand</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pBandG </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> poSrcMss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetRasterBand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">GDALRasterBand</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pBandB </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> poSrcMss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetRasterBand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="图像融合" tabindex="-1"><a class="header-anchor" href="#图像融合"><span>图像融合</span></a></h3><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144823.png" alt="20241001144823"></p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 此区域需要自己实现</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> panYSize; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 逐行读取各波段数据</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        pBandR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RasterIO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GF_Read, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, i, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, pR, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, GDT_Float32, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        pBandG</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RasterIO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GF_Read, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, i, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, pG, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, GDT_Float32, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        pBandB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RasterIO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GF_Read, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, i, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, pB, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, GDT_Float32, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        pan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RasterIO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GF_Read, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, i, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, panI, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, GDT_Float32, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> panXSize; j</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // 对pan数据进行归一化处理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pINorm </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">panI</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[j] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> panMin) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pixelDepth </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (panMax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> panMin);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">		//pixelDepth=255</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // 如果需要，也对RGB数据进行归一化处理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rNorm </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[j] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> RMin) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pixelDepth </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (RMax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> RMin);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> gNorm </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pG</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[j] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> GMin) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pixelDepth </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (GMax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> GMin);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> bNorm </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[j] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> BMin) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pixelDepth </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (BMax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> BMin);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // 将RGB转换为HIS</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> h, s, i;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            RGB_HIS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(rNorm, gNorm, bNorm, h, i, s);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // 用归一化后的pan数据替换I分量</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pINorm;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // 将HIS转换回RGB</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rNew, gNew, bNew;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            HIS_RGB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(h, i, s, rNew, gNew, bNew);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // 将新的RGB值赋值回数组</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            pR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[j] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rNew;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            pG</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[j] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> gNew;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            pB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[j] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> bNew;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 将修改后的数据逐行写入输出波段</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        pwBandR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RasterIO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GF_Write, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, i, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, pR, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, GDT_Float32, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        pwBandG</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RasterIO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GF_Write, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, i, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, pG, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, GDT_Float32, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        pwBandB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RasterIO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GF_Write, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, i, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, pB, panXSize, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, GDT_Float32, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    GDALClose</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(poSrcMss);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    GDALClose</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(poSrcPan);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    GDALClose</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(pwDataset);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    delete[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pR; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">delete[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pG; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">delete[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pB;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    delete[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pH; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">delete[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pS; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">delete[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> panI;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cout </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;融合成功&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="灰度共生矩阵计算" tabindex="-1"><a class="header-anchor" href="#灰度共生矩阵计算"><span>灰度共生矩阵计算</span></a></h3><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144836.png" alt="20241001144836"></p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //计算四个方向的灰度共生矩阵</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> firstpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, secondpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (sel_Angle)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //0：东西方向（0°）</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_height; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_width </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_stride; j</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                firstpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> histImage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_width </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                secondpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> histImage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_width </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_stride];</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                glcm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[firstpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_class </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> secondpoint]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //1：东北-西南方向（45°）</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_height </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_stride; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_stride; j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_width; j</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                firstpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> histImage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_width </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                secondpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> histImage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[(i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_stride) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_width </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_stride];</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                glcm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[firstpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_class </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> secondpoint]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //2：南-北方向（90°）</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_height </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_stride; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_width; j</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                firstpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> histImage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_width </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                secondpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> histImage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[(i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_stride) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_width </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j];</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                glcm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[firstpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_class </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> secondpoint]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //3：西北-东南方向（135°）</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_height </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_stride; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_width </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_stride; j</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                firstpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> histImage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_width </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                secondpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> histImage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[(i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_stride) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Ori_width </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_stride];</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                glcm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[firstpoint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> glcm_class </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> secondpoint]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        cout </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;空间位置关系选项出错！&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="计算混淆矩阵" tabindex="-1"><a class="header-anchor" href="#计算混淆矩阵"><span>计算混淆矩阵</span></a></h3><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144859.png" alt="20241001144859"></p><h3 id="栅格图斑聚类" tabindex="-1"><a class="header-anchor" href="#栅格图斑聚类"><span><strong>栅格图斑聚类</strong></span></a></h3><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144917.png" alt="20241001144917"></p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rows; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cols; j</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            pos </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cols </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            pos_left </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pos </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            pos_up </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cols </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> freeflag</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_left]) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> freeflag</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    else</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_left];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_up]) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> freeflag</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    else</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_up];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                } </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_left] </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_up]) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> freeflag</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_left] </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_up]) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_left];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_left] </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_up]) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_up];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ( </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_left] </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_up]){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_left] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_up]) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_left];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                        pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_up];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ii </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; ii </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i; ii</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> jj </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; jj </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cols; jj</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[ii </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cols </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> jj] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_left])</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                                    pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[ii </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> cols </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> jj] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pDataout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[pos_up];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="寻找峰谷点" tabindex="-1"><a class="header-anchor" href="#寻找峰谷点"><span>寻找峰谷点</span></a></h3><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144928.png" alt="20241001144928"></p><h3 id="d8算法判断流向" tabindex="-1"><a class="header-anchor" href="#d8算法判断流向"><span>D8算法判断流向</span></a></h3><p><img src="https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144939.png" alt="20241001144939"></p>`,290)]))}const r=i(h,[["render",p],["__file","遥感图像处理基础知识.html.vue"]]),d=JSON.parse('{"path":"/zh/posts/study/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html","title":"遥感图像处理基础知识","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-10-01T00:00:00.000Z","category":["科研"],"tag":["总结","遥感"],"description":"遥感图像处理基础知识 第一章 认识图像 图像的概念 图像就是所具有视觉效果的画面，作为一种客观对象的表达方式，是我们最常用的信息载体，也是我们最主要的信息源。（一切具有空间排列关系的数据皆为图像！） 遥感图像中的关键信息 基本信息：行数、列数、波段数、数据文件类型、数据储存方式、数据类型 像素信息：像素数据类型、像素位深、取值范围、统计特性、起始位置 ...","head":[["meta",{"property":"og:url","content":"https://qby702301.github.io/blog/blog/zh/posts/study/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html"}],["meta",{"property":"og:site_name","content":"QBY的博客"}],["meta",{"property":"og:title","content":"遥感图像处理基础知识"}],["meta",{"property":"og:description","content":"遥感图像处理基础知识 第一章 认识图像 图像的概念 图像就是所具有视觉效果的画面，作为一种客观对象的表达方式，是我们最常用的信息载体，也是我们最主要的信息源。（一切具有空间排列关系的数据皆为图像！） 遥感图像中的关键信息 基本信息：行数、列数、波段数、数据文件类型、数据储存方式、数据类型 像素信息：像素数据类型、像素位深、取值范围、统计特性、起始位置 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/httpsqby-1330074694.cos.ap-nanjing.myqcloud.comimages20241001134928.png.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-02T01:23:14.000Z"}],["meta",{"property":"article:tag","content":"总结"}],["meta",{"property":"article:tag","content":"遥感"}],["meta",{"property":"article:published_time","content":"2024-10-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-02T01:23:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"遥感图像处理基础知识\\",\\"image\\":[\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/httpsqby-1330074694.cos.ap-nanjing.myqcloud.comimages20241001134928.png.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144046.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144242.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144256.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144306.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144317.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144331.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144341.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144437.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144447.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144510.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144520.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144529.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144601.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144637.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144649.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144728.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144801.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144823.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144836.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144859.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144917.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144928.png\\",\\"https://qby-1330074694.cos.ap-nanjing.myqcloud.com/images/20241001144939.png\\"],\\"datePublished\\":\\"2024-10-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-02T01:23:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"QBY\\",\\"url\\":\\"https://git.zju.edu.cn/3210103719\\"}]}"]]},"headers":[{"level":2,"title":"第一章 认识图像","slug":"第一章-认识图像","link":"#第一章-认识图像","children":[{"level":3,"title":"图像的概念","slug":"图像的概念","link":"#图像的概念","children":[]},{"level":3,"title":"遥感图像中的关键信息","slug":"遥感图像中的关键信息","link":"#遥感图像中的关键信息","children":[]}]},{"level":2,"title":"第二章 地图投影","slug":"第二章-地图投影","link":"#第二章-地图投影","children":[{"level":3,"title":"大地水准面","slug":"大地水准面","link":"#大地水准面","children":[]},{"level":3,"title":"国家大地坐标系","slug":"国家大地坐标系","link":"#国家大地坐标系","children":[]},{"level":3,"title":"地图投影的方式","slug":"地图投影的方式","link":"#地图投影的方式","children":[]},{"level":3,"title":"常见地图投影的变形特点","slug":"常见地图投影的变形特点","link":"#常见地图投影的变形特点","children":[]}]},{"level":2,"title":"第三章 图像还原","slug":"第三章-图像还原","link":"#第三章-图像还原","children":[{"level":3,"title":"辐射纠正","slug":"辐射纠正","link":"#辐射纠正","children":[]},{"level":3,"title":"原因-辐射误差","slug":"原因-辐射误差","link":"#原因-辐射误差","children":[]},{"level":3,"title":"校正方法","slug":"校正方法","link":"#校正方法","children":[]},{"level":3,"title":"几何纠正","slug":"几何纠正","link":"#几何纠正","children":[]},{"level":3,"title":"几何变形","slug":"几何变形","link":"#几何变形","children":[]},{"level":3,"title":"粗纠正","slug":"粗纠正","link":"#粗纠正","children":[]},{"level":3,"title":"精纠正","slug":"精纠正","link":"#精纠正","children":[]},{"level":3,"title":"重采样","slug":"重采样","link":"#重采样","children":[]}]},{"level":2,"title":"第四章 图像运算及变换","slug":"第四章-图像运算及变换","link":"#第四章-图像运算及变换","children":[{"level":3,"title":"图像运算","slug":"图像运算","link":"#图像运算","children":[]},{"level":3,"title":"图像变换","slug":"图像变换","link":"#图像变换","children":[]}]},{"level":2,"title":"第五章 图像增强","slug":"第五章-图像增强","link":"#第五章-图像增强","children":[{"level":3,"title":"实质","slug":"实质","link":"#实质","children":[]},{"level":3,"title":"直方图变换","slug":"直方图变换","link":"#直方图变换","children":[]},{"level":3,"title":"直方图均衡化","slug":"直方图均衡化","link":"#直方图均衡化","children":[]},{"level":3,"title":"直方图规定化","slug":"直方图规定化","link":"#直方图规定化","children":[]},{"level":3,"title":"卷积滤波","slug":"卷积滤波","link":"#卷积滤波","children":[]},{"level":3,"title":"图像中常见的噪声","slug":"图像中常见的噪声","link":"#图像中常见的噪声","children":[]},{"level":3,"title":"二维卷积","slug":"二维卷积","link":"#二维卷积","children":[]},{"level":3,"title":"平滑滤波器","slug":"平滑滤波器","link":"#平滑滤波器","children":[]},{"level":3,"title":"锐化滤波器","slug":"锐化滤波器","link":"#锐化滤波器","children":[]},{"level":3,"title":"一阶微分和二阶微分区别","slug":"一阶微分和二阶微分区别","link":"#一阶微分和二阶微分区别","children":[]}]},{"level":2,"title":"第六章 图像融合","slug":"第六章-图像融合","link":"#第六章-图像融合","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"图像配准","slug":"图像配准","link":"#图像配准","children":[]},{"level":3,"title":"IHS变换法","slug":"ihs变换法","link":"#ihs变换法","children":[]},{"level":3,"title":"主成分变换（PCA）融合","slug":"主成分变换-pca-融合","link":"#主成分变换-pca-融合","children":[]},{"level":3,"title":"小波变换融合","slug":"小波变换融合","link":"#小波变换融合","children":[]}]},{"level":2,"title":"第七章 纹理分析","slug":"第七章-纹理分析","link":"#第七章-纹理分析","children":[{"level":3,"title":"纹理分析方法","slug":"纹理分析方法","link":"#纹理分析方法","children":[]},{"level":3,"title":"灰度共生矩阵","slug":"灰度共生矩阵","link":"#灰度共生矩阵","children":[]},{"level":3,"title":"灰度游程长度法","slug":"灰度游程长度法","link":"#灰度游程长度法","children":[]},{"level":3,"title":"模型分析法","slug":"模型分析法","link":"#模型分析法","children":[]},{"level":3,"title":"结构分析法","slug":"结构分析法","link":"#结构分析法","children":[]},{"level":3,"title":"空间/频率域联合分析法","slug":"空间-频率域联合分析法","link":"#空间-频率域联合分析法","children":[]},{"level":3,"title":"各类方法比较","slug":"各类方法比较","link":"#各类方法比较","children":[]},{"level":3,"title":"纹理应用","slug":"纹理应用","link":"#纹理应用","children":[]},{"level":3,"title":"为什么要灰度级压缩","slug":"为什么要灰度级压缩","link":"#为什么要灰度级压缩","children":[]},{"level":3,"title":"特征值的选取","slug":"特征值的选取","link":"#特征值的选取","children":[]}]},{"level":2,"title":"第八章 非监督分类","slug":"第八章-非监督分类","link":"#第八章-非监督分类","children":[{"level":3,"title":"概念","slug":"概念-1","link":"#概念-1","children":[]},{"level":3,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":3,"title":"目标","slug":"目标","link":"#目标","children":[]},{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]},{"level":3,"title":"简单集群分类方法","slug":"简单集群分类方法","link":"#简单集群分类方法","children":[]},{"level":3,"title":"K-均值聚类","slug":"k-均值聚类","link":"#k-均值聚类","children":[]},{"level":3,"title":"ISODATA算法","slug":"isodata算法","link":"#isodata算法","children":[]},{"level":3,"title":"非监督分类方法优缺点","slug":"非监督分类方法优缺点","link":"#非监督分类方法优缺点","children":[]}]},{"level":2,"title":"第九章 监督分类","slug":"第九章-监督分类","link":"#第九章-监督分类","children":[{"level":3,"title":"主要步骤","slug":"主要步骤","link":"#主要步骤","children":[]},{"level":3,"title":"选择训练样本区","slug":"选择训练样本区","link":"#选择训练样本区","children":[]},{"level":3,"title":"选择合适的分类算法","slug":"选择合适的分类算法","link":"#选择合适的分类算法","children":[]},{"level":3,"title":"分类结果的精度评估","slug":"分类结果的精度评估","link":"#分类结果的精度评估","children":[]},{"level":3,"title":"监督分类特点","slug":"监督分类特点","link":"#监督分类特点","children":[]},{"level":3,"title":"制约图像分类精度的因素","slug":"制约图像分类精度的因素","link":"#制约图像分类精度的因素","children":[]},{"level":3,"title":"非监督分类与监督分类的区别","slug":"非监督分类与监督分类的区别","link":"#非监督分类与监督分类的区别","children":[]}]},{"level":2,"title":"第十章 图像分割","slug":"第十章-图像分割","link":"#第十章-图像分割","children":[{"level":3,"title":"基本策略","slug":"基本策略","link":"#基本策略","children":[]},{"level":3,"title":"边界分割法","slug":"边界分割法","link":"#边界分割法","children":[]},{"level":3,"title":"阈值分割法","slug":"阈值分割法","link":"#阈值分割法","children":[]},{"level":3,"title":"分水岭算法","slug":"分水岭算法","link":"#分水岭算法","children":[]}]},{"level":2,"title":"第十一章 分类后处理","slug":"第十一章-分类后处理","link":"#第十一章-分类后处理","children":[]},{"level":2,"title":"第十二章 深度学习遥感图像分类","slug":"第十二章-深度学习遥感图像分类","link":"#第十二章-深度学习遥感图像分类","children":[{"level":3,"title":"基本原理","slug":"基本原理","link":"#基本原理","children":[]},{"level":3,"title":"人工神经网络优化方法","slug":"人工神经网络优化方法","link":"#人工神经网络优化方法","children":[]},{"level":3,"title":"优势","slug":"优势","link":"#优势","children":[]},{"level":3,"title":"CNN和ANN的区别","slug":"cnn和ann的区别","link":"#cnn和ann的区别","children":[]}]},{"level":2,"title":"第十三章 形态学处理","slug":"第十三章-形态学处理","link":"#第十三章-形态学处理","children":[{"level":3,"title":"基本思想","slug":"基本思想","link":"#基本思想","children":[]},{"level":3,"title":"腐蚀","slug":"腐蚀","link":"#腐蚀","children":[]},{"level":3,"title":"膨胀","slug":"膨胀","link":"#膨胀","children":[]},{"level":3,"title":"对偶性","slug":"对偶性","link":"#对偶性","children":[]},{"level":3,"title":"开运算","slug":"开运算","link":"#开运算","children":[]},{"level":3,"title":"闭运算","slug":"闭运算","link":"#闭运算","children":[]},{"level":3,"title":"目标击中选择","slug":"目标击中选择","link":"#目标击中选择","children":[]},{"level":3,"title":"边界提取","slug":"边界提取","link":"#边界提取","children":[]},{"level":3,"title":"区域填充、连通分量提取、骨架提取","slug":"区域填充、连通分量提取、骨架提取","link":"#区域填充、连通分量提取、骨架提取","children":[]}]},{"level":2,"title":"第十四章 数字地形分析","slug":"第十四章-数字地形分析","link":"#第十四章-数字地形分析","children":[{"level":3,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":3,"title":"地形参数计算","slug":"地形参数计算","link":"#地形参数计算","children":[]},{"level":3,"title":"地形特征分析","slug":"地形特征分析","link":"#地形特征分析","children":[]}]},{"level":2,"title":"编程相关","slug":"编程相关","link":"#编程相关","children":[{"level":3,"title":"通用","slug":"通用","link":"#通用","children":[]},{"level":3,"title":"图像融合","slug":"图像融合","link":"#图像融合","children":[]},{"level":3,"title":"灰度共生矩阵计算","slug":"灰度共生矩阵计算","link":"#灰度共生矩阵计算","children":[]},{"level":3,"title":"计算混淆矩阵","slug":"计算混淆矩阵","link":"#计算混淆矩阵","children":[]},{"level":3,"title":"栅格图斑聚类","slug":"栅格图斑聚类","link":"#栅格图斑聚类","children":[]},{"level":3,"title":"寻找峰谷点","slug":"寻找峰谷点","link":"#寻找峰谷点","children":[]},{"level":3,"title":"D8算法判断流向","slug":"d8算法判断流向","link":"#d8算法判断流向","children":[]}]}],"git":{"createdTime":1727765427000,"updatedTime":1727832194000,"contributors":[{"name":"QBY","email":"2403422539@qq.com","commits":1}]},"readingTime":{"minutes":25.71,"words":7713},"filePathRelative":"zh/posts/study/遥感图像处理基础知识.md","localizedDate":"2024年10月1日","excerpt":"\\n<h2>第一章 认识图像</h2>\\n<h3>图像的概念</h3>\\n<p>图像就是所具有视觉效果的画面，作为一种客观对象的表达方式，是我们最常用的<strong>信息载体</strong>，也是我们最主要的<strong>信息源</strong>。（<strong>一切具有空间排列关系的数据皆为图像！</strong>）</p>\\n<h3><strong>遥感图像中的关键信息</strong></h3>\\n<p><strong>基本信息</strong>：行数、列数、波段数、数据文件类型、数据储存方式、数据类型</p>\\n<p><strong>像素信息</strong>：像素数据类型、像素位深、取值范围、统计特性、起始位置</p>","autoDesc":true}');export{r as comp,d as data};
